#!/bin/bash
# The following two commands within the dotted lines require
# raw data in a specific directory structure to run!!!
# The scripts after the dotted-line block can be run with the files
# provided in this zip
#-----------------------------------------------------------------------
# generate a dictionary file "dict_ID_alllabel.csv" for caseID, race, 5-yr survive, stage, microRNA filename, RNA filename
echo 'run make_dict_stage.py'
./make_dict_stage.py > trivial.txt

# generate a data file "data_alllabel.csv" for sklearn in the format:
#           race, 5-yr survive or not, tumor stage, microRNA1, ..., RNA1, ...
# sample 1   0~2        0~1               0~3         number   ...
#  ...
echo 'run preprocess_alllabel.py'
./preprocess_alllabel.py > trivial.txt
#-------------------------------------------------------------------------
# run ML methods 3 times on label survival or not, tumor stage
echo 'run ML on label SURV, STAGE'
./ml_surv.py > ml_surv.txt
./ml_stage.py > ml_stage.txt

# apply PCA then run ML methods with 0.5, 0.9, 0.98 variance on labels
echo 'run PCA ML on label SURV, STAGE, RACE'
./ml_surv_pca.py > ml_surv_pca.txt
./ml_stage_pca.py > ml_stage_pca.txt
./ml_race_pca.py > ml_race_pca.txt


# clustering with cluster numbers 2~8 and run different ML, to see if the labels generated by clustering make sense
echo 'run clustering and check with ML'
./cluster_kmeans.py > cluster_kmeans.txt

# clustering with cluster numbers 2~8, save labels in "totcluster%d_label_new.csv",
# output label intra-cluster distribution in "cluster_savelabel_distri_ml.txt",
# run SVMlinear, output confusion_matrix in "cluster_savelabel_distri_ml.txt",
# save the top 10 genes with largest coefficient in 'SVMlinear_coef_cluster%d.csv'
echo 'run clustering, save labels, get current label distribution and check with ML'
./cluster_savelabel_distri_ml.py > cluster_savelabel_distri_ml.txt

# extract and sort genes that are variant within cluster pair
# save in "sort_rr_cluster%d_cc.csv'
echo 'extract genes differentially expressed in pairwise clusters'
./cluster_mean_var_extract_cc.py

# extract and sort genes that are variant in all cluster pairs
# save in "sort_rr_cluster%d.csv'
echo 'extract genes with ratio > 1 in clustering'
./cluster_mean_var_extract_new.py

# From "sort_rr_cluster%d_cc.csv' and 'SVMlinear_coef_cluster%d.csv',
# extract the protein-encoding genes that are overlapped, i.e., the genes
# that are both predicted by both ratio and SVM_linear.
# Save in 'overlap_cluster%d_c%dc%d.csv' (num_cluster, cluster1 and cluster 2 in the pair)
echo 'extract genes that are both predicted by both ratio and SVM_linear'
./extract_proteingeneoverlap.py

# calculate mean and std of each gene in the the current given labels (5-yr survival, tumor stage, race)
# save in "surv_meanstd.csv", "stage_meanstd.csv", "race_meanstd.csv"
echo 'calculate mean and std on current labels'
./currentlabel_mean_var.py
# try to extract genes that are variant in the current labels
echo 'extract genes with ratio > 1 on current labels'
./currentlabel_mean_var_extract.py > currentlabel_mean_var_extract.txt
